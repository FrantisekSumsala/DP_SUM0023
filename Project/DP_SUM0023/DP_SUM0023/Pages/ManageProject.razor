@page "/projectmanagement/{projectId:int}"
@attribute [Authorize]

@using DP_SUM0023.Data.Models
@using DP_SUM0023.Data.Services.Interfaces
@using System.ComponentModel.DataAnnotations
@inject IProjectService projectService
@inject NavigationManager navManager

<h1>Project: @Project.Company.Name - @Project.Name</h1>

<div class="container-fluid">
    @*Display project information*@
    <div class="container-fluid">
        <h3 style="padding-top:10px">Project information</h3>

        <div class="row justify-content-start align-items-center" style="padding-left:15px">
            @if (!isInProjectEditMode)
            {
                <div class="col-md-3 border border-dark rounded" style="padding-top:10px">
                    <div class="row">
                        <div class="col">Project name:</div>
                        <div class="col">@Project.Name</div>
                    </div>

                    <button type="submit" class="btn btn-primary btn-block mb-3 float-end" @onclick=EnableProjectInformationEditMode>Edit</button>
                </div>
            }
            else
            {
                <div class="col-md-3 border border-dark rounded">
                    <EditForm Model=@projectInformation OnValidSubmit="ChangeProjectInformation">
                        <DataAnnotationsValidator />

                        <div class="form-outline mb-4">
                            <label class="form-label" for="ProjectNameInput">Company name</label>
                            <InputText id="ProjectNameInput" class="form-control" @bind-Value="@projectInformation.Name"></InputText>
                            <ValidationMessage For="() => projectInformation.Name" />
                        </div>

                        <div class="row justify-content-end">
                            <div class="col-auto" style="display:block">
                                <button type="button" class="btn btn-danger btn-block mb-3 float-end" @onclick=CancelChangeProjectInformation>Cancel</button>

                            </div>
                            <div class="col-auto" style="display:block">
                                <button type="submit" class="btn btn-primary btn-block mb-3 float-end">Save</button>

                            </div>
                        </div>
                    </EditForm>
                </div>
            }
        </div>
    </div>
</div>

@code {
    [Parameter]
    public int ProjectId { get; set; }
    public Project? Project { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Project = await projectService.GetByIdAsync(ProjectId);
        if (Project == null)
            navManager.NavigateTo("/", true);
    }

    // Display project info
    bool isInProjectEditMode = false;
    class ProjectInformation
    {
        [Required(AllowEmptyStrings = false, ErrorMessage = "Project name is required")]
        public string Name { get; set; }
    }

    ProjectInformation projectInformation = new ProjectInformation();

    private async Task EnableProjectInformationEditMode()
    {
        isInProjectEditMode = true;
        projectInformation.Name = Project.Name;
    }

    private async Task ChangeProjectInformation(EditContext editContext)
    {
        var projectInformationInput = (ProjectInformation)editContext.Model;
        Project.Name = projectInformation.Name;

        await projectService.UpdateAsync(Project);
        isInProjectEditMode = false;
    }

    private async Task CancelChangeProjectInformation()
    {
        isInProjectEditMode = false;
    }

}
